import React from "react";
import { useFadeInOnceLoaded } from "../../hooks/useFadeInOnceLoaded";
import "./Previews.css";
import "./HTTPPreview.css";
import listingImg from "../../assets/project-images/preview/webserver-listing.png";
import siegeImg from "../../assets/project-images/preview/webserver-siege.png";
import configImg from "../../assets/project-images/preview/webserver-config.png";
function WebServerPreview() {
    const fadeClass = useFadeInOnceLoaded(20);
    return (React.createElement("div", { className: `WebServerModalContentInner ${fadeClass}` },
        React.createElement("div", { className: "gridTitle" },
            React.createElement("h2", { className: "ModalTitle" }, "High Performance Web Server")),
        React.createElement("div", { className: "gridSubtitle" },
            React.createElement("p", { className: "ModalSubtitle" },
                "Inspired by Nginx \u2014 Built From Scratch",
                React.createElement("span", { className: "Approximation" }, "Approx 300h"))),
        React.createElement("section", { className: "ModalSection gridFeatures" },
            React.createElement("h3", null,
                React.createElement("span", { className: "icon" }, "\u2728"),
                "Key Features"),
            React.createElement("ul", { className: "ModalFeatureList" },
                React.createElement("li", null,
                    "\uD83D\uDDC4\uFE0F ",
                    React.createElement("strong", null, "Select-Based Event Loop"),
                    " \u2014 All I/O via a single non-blocking select()"),
                React.createElement("li", null,
                    "\uD83D\uDD04 ",
                    React.createElement("strong", null, "Multi-Threading + Forks"),
                    " \u2014 Hybrid concurrency for scalability & CGI"),
                React.createElement("li", null,
                    "\uD83D\uDEE3\uFE0F ",
                    React.createElement("strong", null, "Static & Dynamic Routing"),
                    " \u2014 Serves HTML/CSS/JS and executes PHP/Python via CGI"),
                React.createElement("li", null,
                    "\uD83D\uDCC4 ",
                    React.createElement("strong", null, "Custom Config File"),
                    " \u2014 Nginx-style routing, file uploads, method control"),
                React.createElement("li", null,
                    "\uD83D\uDD12 ",
                    React.createElement("strong", null, "SSL Support"),
                    " \u2014 HTTPS via OpenSSL"),
                React.createElement("li", null,
                    "\uD83D\uDCC2 ",
                    React.createElement("strong", null, "Autoindex & Error Pages"),
                    " \u2014 Missing files, bad requests, full directory rendering"),
                React.createElement("li", null,
                    "\uD83D\uDCEC ",
                    React.createElement("strong", null, "GET, POST, DELETE"),
                    " \u2014 Fully implemented HTTP/1.1 method handling"))),
        React.createElement("section", { className: "ModalSection gridExplanation" },
            React.createElement("h3", null,
                React.createElement("span", { className: "icon", style: { marginBottom: "0.4rem" } }, "\uD83D\uDD0D"),
                "What is an HTTP Server?"),
            React.createElement("p", { className: "ModalParagraph HTTPModalParagraph" }, "An HTTP server is the backbone of the web \u2014 it listens for incoming browser requests and serves files or executes scripts in response. This project implements core HTTP/1.1 behavior, mimicking the resilience and flexibility of Nginx while staying fully hand-coded in C++.")),
        React.createElement("section", { className: "ModalSection gridTech" },
            React.createElement("h3", null,
                React.createElement("span", { className: "icon" }, "\uD83D\uDD10"),
                "Tech Stack"),
            React.createElement("div", { className: "ModalTechTags" },
                React.createElement("span", null, "C++11"),
                React.createElement("span", null, "Event-Driven I/O (select)"),
                React.createElement("span", null, "Multithreading"),
                React.createElement("span", null, "Process Forking"),
                React.createElement("span", null, "OpenSSL (HTTPS)"),
                React.createElement("span", null, "CGI Support (PHP & Python)"),
                React.createElement("span", null, "Custom Config Parser"),
                React.createElement("span", null, "HTTP/1.1 Compliance"))),
        React.createElement("section", { className: "ModalSection gridScreenshots" },
            React.createElement("h3", null,
                React.createElement("span", { className: "icon" }, "\uD83D\uDCF8"),
                "Screenshots"),
            React.createElement("div", { className: "ModalScreenshots", id: "HTTPScreenshots" },
                React.createElement("figure", null,
                    React.createElement("img", { src: listingImg, alt: "Directory listing view" }),
                    React.createElement("figcaption", { className: "ModalCaption" }, "Directory listing view")),
                React.createElement("figure", null,
                    React.createElement("img", { src: siegeImg, alt: "Siege benchmark output" }),
                    React.createElement("figcaption", { className: "ModalCaption" }, "Siege benchmark output")),
                React.createElement("figure", null,
                    React.createElement("img", { src: configImg, alt: "Config file snippet" }),
                    React.createElement("figcaption", { className: "ModalCaption" }, "Config file snippet")))),
        React.createElement("section", { className: "ModalSection gridRun" },
            React.createElement("h3", null,
                React.createElement("span", { className: "icon" }, "\u2699\uFE0F"),
                "How to Run"),
            React.createElement("pre", { className: "ModalCode" },
                React.createElement("code", { className: "preserveWhiteSpaces" }, "git clone https://github.com/Poider/High-Performance-Cpp-Web-Server-Inspired-by-Nginx.git && cd High-Performance-Cpp-Web-Server-Inspired-by-Nginx && make")),
            React.createElement("div", { className: "ModalHint" },
                "For a comprehensive guide, check my\u00A0",
                React.createElement("a", { href: "https://github.com/Poider/Inception-Dockerized-Solutions", target: "_blank", rel: "noopener noreferrer" }, "GitHub"),
                "\u00A0for a step-by-step walkthrough, or\u00A0",
                React.createElement("a", { href: "https://www.linkedin.com/in/mouadelammari/", target: "_blank" }, "contact me"),
                "\u00A0for any questions.")),
        React.createElement("section", { className: "ModalSection gridBackground" },
            React.createElement("h3", null,
                React.createElement("span", { className: "icon", style: { marginBottom: "0.4rem" } }, "\u2712\uFE0F"),
                "Project Background"),
            React.createElement("p", { className: "ModalParagraph ParagraphBoxShadowing" }, "Developed during the 42 Network\u2019s \u201Cwebserv\u201D project, this server required implementing nearly every part of a production-ready HTTP server \u2014 from parsing and routing to sockets and threads. The goal was resilience under pressure: no memory leaks, no crashes, no blocking I/O.")),
        React.createElement("div", { className: "ModalActions" },
            React.createElement("a", { href: "https://github.com/Poider/High-Performance-Cpp-Web-Server-Inspired-by-Nginx", target: "_blank", className: "ModalBtn" },
                React.createElement("span", null, "\uD83D\uDD17 "),
                "GitHub"))));
}
export default WebServerPreview;
