import React from 'react';
import "./Previews.css";
import pingpongGIF from "../../assets/project-images/preview/pingpongGIF.gif";
import channelsInterface from "../../assets/project-images/preview/channelsInterface.png";
import loginPage from "../../assets/project-images/preview/loginPage.png";
import leaderBoard from "../../assets/project-images/preview/leaderBoard.png";
import chatInterface from "../../assets/project-images/preview/chatInterface.png";
import { useFadeInOnceLoaded } from "../../hooks/useFadeInOnceLoaded";
function WebAppPreview() {
    const fadeClass = useFadeInOnceLoaded(10);
    return (React.createElement("div", { className: `webAppModalContentInner ${fadeClass}` },
        React.createElement("h2", { className: "ModalTitle" }, "Ping Pong Web App "),
        React.createElement("p", { className: "ModalSubtitle" },
            "A Real-Time Multiplayer Experience Built with NestJS & Three.js",
            React.createElement("span", { className: "Approximation" }, "Approx 350h")),
        React.createElement("section", { className: "ModalSection gridPreview" },
            React.createElement("h3", null,
                React.createElement("span", { className: "icon" }, "\uD83C\uDFAE"),
                "Live Gameplay Preview"),
            React.createElement("img", { src: pingpongGIF, alt: "Ping pong animation", width: "100%", height: "auto", loading: "lazy", style: { display: 'block', marginLeft: '0.2rem', maxWidth: "400px" } })),
        React.createElement("section", { className: "ModalSection gridFeatures" },
            React.createElement("h3", null,
                React.createElement("span", { className: "icon" }, "\u2728"),
                "Key Features"),
            React.createElement("ul", { className: "ModalFeatureList" },
                React.createElement("li", null,
                    React.createElement("span", { className: "featureIcon" }, "\uD83E\uDDE0"),
                    React.createElement("strong", null, "Matchmaking"),
                    " \u2013 Real-time player pairing"),
                React.createElement("li", null,
                    React.createElement("span", { className: "featureIcon" }, "\uD83D\uDD10"),
                    React.createElement("strong", null, "OAuth2 + 2FA"),
                    " \u2013 Secure login with optional 2FA"),
                React.createElement("li", null,
                    React.createElement("span", { className: "featureIcon" }, "\uD83D\uDCAC"),
                    React.createElement("strong", null, "Advanced Chat"),
                    " \u2013 Public/private rooms, DMs, mute/ban"),
                React.createElement("li", null,
                    React.createElement("span", { className: "featureIcon" }, "\uD83C\uDFC6"),
                    React.createElement("strong", null, "Leaderboards"),
                    " \u2013 Track wins, losses, ladder ranks"),
                React.createElement("li", null,
                    React.createElement("span", { className: "featureIcon" }, "\uD83C\uDFA8"),
                    React.createElement("strong", null, "3D Gameplay"),
                    " \u2013 Rendered with Three.js & Blender"),
                React.createElement("li", null,
                    React.createElement("span", { className: "featureIcon" }, "\uD83D\uDC33"),
                    React.createElement("strong", null, "Dockerized Setup"),
                    " \u2013 One-liner deployment"))),
        React.createElement("section", { className: "ModalSection gridTech" },
            React.createElement("h3", null,
                React.createElement("span", { className: "icon" }, "\uD83E\uDDF0"),
                "Tech Stack"),
            React.createElement("div", { className: "ModalTechTags" },
                React.createElement("span", null, "NestJS"),
                React.createElement("span", null, "React"),
                React.createElement("span", null, "Socket.IO"),
                React.createElement("span", null, "PostgreSQL"),
                React.createElement("span", null, "Docker"),
                React.createElement("span", null, "JWT"),
                React.createElement("span", null, "Three.js"),
                React.createElement("span", null, "OAuth2"))),
        React.createElement("section", { className: "ModalSection gridScreenshots" },
            React.createElement("h3", null,
                React.createElement("span", { className: "icon" }, "\uD83D\uDCF8"),
                "Screenshots"),
            React.createElement("div", { className: "webAppModalScreenshots" },
                React.createElement("figure", null,
                    React.createElement("img", { className: "webAppPreviewSS", src: loginPage, alt: "Login Page" }),
                    React.createElement("figcaption", null, "Login Page")),
                React.createElement("figure", null,
                    React.createElement("img", { className: "webAppPreviewSS", src: chatInterface, alt: "Chat Interface" }),
                    React.createElement("figcaption", null, "Chat Interface")),
                React.createElement("figure", null,
                    React.createElement("img", { className: "webAppPreviewSS", src: channelsInterface, alt: "Channels Interface" }),
                    React.createElement("figcaption", null, "Channels Interface")),
                React.createElement("figure", null,
                    React.createElement("img", { className: "webAppPreviewSS", src: leaderBoard, alt: "Leaderboard" }),
                    React.createElement("figcaption", null, "Leaderboard")))),
        React.createElement("section", { className: "ModalSection gridSecurity" },
            React.createElement("h3", null,
                React.createElement("span", { className: "icon" }, "\uD83D\uDD12"),
                "Security & Architecture"),
            React.createElement("ul", { className: "webAppModalSecurityList" },
                React.createElement("li", null, "Passwords hashed with bcrypt"),
                React.createElement("li", null, "JWT for token-based authentication"),
                React.createElement("li", null, "Input validation & SQL injection prevention"),
                React.createElement("li", null, "Rootless Docker deployment"))),
        React.createElement("section", { className: "ModalSection gridRun" },
            React.createElement("h3", null,
                React.createElement("span", { className: "icon" }, "\u2699\uFE0F"),
                "How to Run"),
            React.createElement("pre", { className: "ModalCode" },
                React.createElement("code", { className: "preserveWhiteSpace" }, "git clone https://github.com/Poider/pingpong-web-app.git && npm install && ./init_docker.sh && cd postgresql && docker-compose up -d && npm run start:dev")),
            React.createElement("div", { className: "ModalHint" },
                "For a comprehensive guide, check my\u00A0",
                React.createElement("a", { href: "https://github.com/Poider/Inception-Dockerized-Solutions", target: "_blank", rel: "noopener noreferrer" }, "GitHub"),
                "\u00A0for a step-by-step walkthrough, or\u00A0",
                React.createElement("a", { href: "https://www.linkedin.com/in/mouadelammari/", target: "_blank" }, "contact me"),
                "\u00A0for any questions.")),
        React.createElement("section", { className: "ModalSection gridBackground" },
            React.createElement("h3", null,
                React.createElement("span", { className: "icon", style: { marginBottom: "0.4rem" } }, "\u2712\uFE0F"),
                "Project Background"),
            React.createElement("p", { className: "ModalParagraph ParagraphBoxShadowing" }, "Built during the ft_transcendence challenge, most of this project was already in place when the final deadline hit: I had just two days to finish the last features and submit my paperwork before starting my internship. My beloved team\u2014three fellow developers\u2014and I pulled 48-hour all-nighters until we crossed the finish line (and promptly collapsed). This full-stack app combines secure authentication, real-time multiplayer gameplay, integrated chat, and containerized deployment \u2014 all built from scratch.")),
        React.createElement("div", { className: "ModalActions" },
            React.createElement("a", { href: "https://github.com/Poider/PingPong-Web-App", target: "_blank", className: "ModalBtn" },
                React.createElement("span", null, "\uD83D\uDD17 "),
                "GitHub"))));
}
export default WebAppPreview;
